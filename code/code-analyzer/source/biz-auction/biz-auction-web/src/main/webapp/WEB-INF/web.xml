<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	version="2.5">
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath*:META-INF/spring/*.xml</param-value>
	</context-param>
    <context-param>
		<param-name>logbackConfigLocation</param-name>
		<param-value>classpath*:logback.xml</param-value>
	</context-param>
	
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<listener>
		<listener-class>org.springframework.web.context.ContextCleanupListener</listener-class>
	</listener>
    <listener>
		<listener-class>org.jasig.cas.client.session.SingleSignOutHttpSessionListener</listener-class>
	</listener>
	<!-- 该过滤器用于实现单点登出功能，可选配置。
	<filter>
		<filter-name>CASSingleSignOutFilter</filter-name>
		<filter-class>com.autostreets.web.cas.client.session.filter.AutostreetsSingleSignOutFilter</filter-class>
		<init-param>
			<param-name>casServerUrlPrefix</param-name>
			<param-value>https://login.autostreets.com</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CASSingleSignOutFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping> -->
	<!-- 该过滤器负责用户的认证工作，必须启用它 -->
	<filter>
		<filter-name>CASAuthenticationFilter</filter-name>
		<filter-class>org.jasig.cas.client.authentication.AuthenticationFilter</filter-class>
		<init-param>
			<param-name>casServerLoginUrl</param-name>
			<param-value>https://login.autostreets.com/login</param-value>
		</init-param>
		<init-param>
			<param-name>serverName</param-name>
			<param-value>http://auction.autostreets.com</param-value>
		</init-param>
		<init-param>
			<param-name>authenticationRedirectStrategyClass</param-name>
			<param-value>com.autostreets.biz.auction.web.cas.AutostreetsAuthenticationRedirectStrategy</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CASAuthenticationFilter</filter-name>
		<url-pattern>/cas/protected</url-pattern>
	</filter-mapping>
	
	<filter-mapping>
		<filter-name>CASAuthenticationFilter</filter-name>
		<url-pattern>/online-batchbid/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>CASAuthenticationFilter</filter-name>
		<url-pattern>/member/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>CASAuthenticationFilter</filter-name>
		<url-pattern>/member/favorite/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>CASAuthenticationFilter</filter-name>
		<url-pattern>/memberCore/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>CASAuthenticationFilter</filter-name>
		<url-pattern>/no-haggle/paydetail/*</url-pattern>
	</filter-mapping>
	
	<filter>
        <filter-name>passportFilter</filter-name>
        <filter-class>com.autostreets.biz.auction.web.filter.PassportFilter</filter-class>
    </filter>
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- 该过滤器负责对Ticket的校验工作，必须启用它 -->
	<filter>
		<filter-name>CASValidationFilter</filter-name>
		<filter-class>org.jasig.cas.client.validation.Cas20ProxyReceivingTicketValidationFilter</filter-class>
		<init-param>
			<param-name>casServerUrlPrefix</param-name>
			<param-value>https://login.autostreets.com</param-value>
		</init-param>
		<!--这里的server是服务端的IP -->
		<init-param>
			<param-name>serverName</param-name>
			<param-value>http://auction.autostreets.com</param-value>
		</init-param>
		<init-param>
			<param-name>redirectAfterValidation</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CASValidationFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- 该过滤器负责实现HttpServletRequest请求的包裹， 比如允许开发者通过HttpServletRequest的getRemoteUser()方法获得SSO登录用户的登录名，可选配置。 -->
	<filter>
		<filter-name>CASHttpServletRequestWrapperFilter</filter-name>
		<filter-class>org.jasig.cas.client.util.HttpServletRequestWrapperFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>CASHttpServletRequestWrapperFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- 该过滤器使得开发者可以通过org.jasig.cas.client.util.AssertionHolder来获取用户的登录名。 比如AssertionHolder.getAssertion().getPrincipal().getName()。 -->
	<filter>
		<filter-name>CASAssertionThreadLocalFilter</filter-name>
		<filter-class>org.jasig.cas.client.util.AssertionThreadLocalFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>CASAssertionThreadLocalFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
        <filter-name>passportFilter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>FORWARD</dispatcher>
    </filter-mapping>

	
	<servlet>
		<servlet-name>springmvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>0</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>springmvc</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<error-page>
		<error-code>404</error-code>
		<location>/jsp/404.jsp</location>
	</error-page>
	<error-page>
		<error-code>500</error-code>
		<location>/jsp/error.jsp</location>
	</error-page>

	<session-config>
		<session-timeout>480</session-timeout>
	</session-config>

	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>index.htm</welcome-file>
	</welcome-file-list>
</web-app>