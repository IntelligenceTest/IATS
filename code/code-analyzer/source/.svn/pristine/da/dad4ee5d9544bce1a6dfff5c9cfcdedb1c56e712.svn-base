<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.autostreets.biz.auction.mapper.AuctionUploadLogMapper" >
  <resultMap id="BaseResultMap" type="com.autostreets.biz.auction.model.AuctionUploadLog" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="auction_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="oper_type" jdbcType="BIT" javaType="java.lang.Integer" />
      <arg column="member_num" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="vehicle_num" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="deal_num" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="created_by" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, auction_id, oper_type, member_num, vehicle_num, deal_num, create_time, created_by
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.autostreets.biz.auction.model.AuctionUploadLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from auction_upload_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="pagination != null and pagination.begin >= 0" >
      limit #{pagination.begin}, #{pagination.length}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from auction_upload_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from auction_upload_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.autostreets.biz.auction.model.AuctionUploadLogExample" >
    delete from auction_upload_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.autostreets.biz.auction.model.AuctionUploadLog" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into auction_upload_log (auction_id, oper_type, member_num, 
      vehicle_num, deal_num, create_time, 
      created_by)
    values (#{auctionId,jdbcType=INTEGER}, #{operType,jdbcType=BIT}, #{memberNum,jdbcType=INTEGER}, 
      #{vehicleNum,jdbcType=INTEGER}, #{dealNum,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createdBy,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.autostreets.biz.auction.model.AuctionUploadLog" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into auction_upload_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="auctionId != null" >
        auction_id,
      </if>
      <if test="operType != null" >
        oper_type,
      </if>
      <if test="memberNum != null" >
        member_num,
      </if>
      <if test="vehicleNum != null" >
        vehicle_num,
      </if>
      <if test="dealNum != null" >
        deal_num,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createdBy != null" >
        created_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="auctionId != null" >
        #{auctionId,jdbcType=INTEGER},
      </if>
      <if test="operType != null" >
        #{operType,jdbcType=BIT},
      </if>
      <if test="memberNum != null" >
        #{memberNum,jdbcType=INTEGER},
      </if>
      <if test="vehicleNum != null" >
        #{vehicleNum,jdbcType=INTEGER},
      </if>
      <if test="dealNum != null" >
        #{dealNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null" >
        #{createdBy,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" resultType="java.lang.Integer" parameterType="com.autostreets.biz.auction.model.AuctionUploadLogExample" >
    select count(*) from auction_upload_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update auction_upload_log
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.auctionId != null" >
        auction_id = #{record.auctionId,jdbcType=INTEGER},
      </if>
      <if test="record.operType != null" >
        oper_type = #{record.operType,jdbcType=BIT},
      </if>
      <if test="record.memberNum != null" >
        member_num = #{record.memberNum,jdbcType=INTEGER},
      </if>
      <if test="record.vehicleNum != null" >
        vehicle_num = #{record.vehicleNum,jdbcType=INTEGER},
      </if>
      <if test="record.dealNum != null" >
        deal_num = #{record.dealNum,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdBy != null" >
        created_by = #{record.createdBy,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update auction_upload_log
    set id = #{record.id,jdbcType=INTEGER},
      auction_id = #{record.auctionId,jdbcType=INTEGER},
      oper_type = #{record.operType,jdbcType=BIT},
      member_num = #{record.memberNum,jdbcType=INTEGER},
      vehicle_num = #{record.vehicleNum,jdbcType=INTEGER},
      deal_num = #{record.dealNum,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      created_by = #{record.createdBy,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.autostreets.biz.auction.model.AuctionUploadLog" >
    update auction_upload_log
    <set >
      <if test="auctionId != null" >
        auction_id = #{auctionId,jdbcType=INTEGER},
      </if>
      <if test="operType != null" >
        oper_type = #{operType,jdbcType=BIT},
      </if>
      <if test="memberNum != null" >
        member_num = #{memberNum,jdbcType=INTEGER},
      </if>
      <if test="vehicleNum != null" >
        vehicle_num = #{vehicleNum,jdbcType=INTEGER},
      </if>
      <if test="dealNum != null" >
        deal_num = #{dealNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null" >
        created_by = #{createdBy,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.autostreets.biz.auction.model.AuctionUploadLog" >
    update auction_upload_log
    set auction_id = #{auctionId,jdbcType=INTEGER},
      oper_type = #{operType,jdbcType=BIT},
      member_num = #{memberNum,jdbcType=INTEGER},
      vehicle_num = #{vehicleNum,jdbcType=INTEGER},
      deal_num = #{dealNum,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      created_by = #{createdBy,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>